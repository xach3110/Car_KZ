import React, { useState } from "react";
import ReactDOM from "react-dom";
import "../styles/SlidingModal.css";

interface SlidingModalProps {
  isOpen: boolean;
  onClose: () => void;
}

const SlidingModal: React.FC<SlidingModalProps> = ({ isOpen, onClose }) => {
  const [name, setName] = useState("");
  const [phone, setPhone] = useState("");
  const [comment, setComment] = useState("");

  const botToken = "7877422434:AAHjowjGiF21-qENdDt_Fsiu_IOWANYQmw8";
  const chatId = "1039289071";

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã

    const text = `üì© *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!*\n\nüë§ *–ò–º—è:* ${name}\nüìû *–¢–µ–ª–µ—Ñ–æ–Ω:* ${phone}\nüí¨ *–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:* ${comment}`;

    try {
      const response = await fetch(
        `https://api.telegram.org/bot${botToken}/sendMessage`,
        {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({
            chat_id: chatId,
            text: text,
            parse_mode: "Markdown",
          }),
        }
      );

      const data = await response.json();
      if (data.ok) {
        alert("–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!");
        setName("");
        setPhone("");
        setComment("");
        onClose(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É
      } else {
        alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞:", error);
      alert("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
    }
  };

  if (!isOpen) return null;

  return ReactDOM.createPortal(
    <div className="modal-overlay open" onClick={onClose}>
      <div className="modal-content" onClick={(e) => e.stopPropagation()}>
        {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è */}
        <button className="close-btn" onClick={onClose}>
          &times;
        </button>

        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <h2 className="label">–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É</h2>
        <p className="label2">
          –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –¥–æ—Å—Ç–∞–≤–∫–µ –∞–≤—Ç–æ –∏–∑ –°–®–ê –≤ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω –ø–æ–¥ –∫–ª—é—á
        </p>

        {/* –§–æ—Ä–º–∞ */}
        <form onSubmit={handleSubmit}>
          <input
            type="text"
            placeholder="–ò–º—è"
            value={name}
            onChange={(e) => setName(e.target.value)}
            required
          />
          <input
            type="tel"
            placeholder="–¢–µ–ª–µ—Ñ–æ–Ω"
            value={phone}
            onChange={(e) => setPhone(e.target.value)}
            required
          />
          <textarea
            placeholder="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"
            value={comment}
            onChange={(e) => setComment(e.target.value)}
          ></textarea>
          <button type="submit">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
        </form>
      </div>
    </div>,
    document.body
  );
};

export default SlidingModal;
